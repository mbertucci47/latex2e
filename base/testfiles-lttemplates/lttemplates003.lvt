%
% Copyright (C) The LaTeX Project
%

\documentclass{minimal}
\input{regression-test}
\ExplSyntaxOn
\debug_on:n { check-declarations , deprecation , log-functions }
\ExplSyntaxOff

\begin{document}
\START
\AUTHOR{Frank Mittelbach}
\ExplSyntaxOn

\OMIT
\cs_new:Npn \ERROR {\typeout{~}\typeout{***~ ==>~TEST~ SHOWS~ ERRORS~<==~
***}\typeout{~}}
\cs_new:Npn \IMPROVE {\typeout{~}\typeout{^^J^^J***~ ==>~RESULT~ COULD~ BE~ IMPROVED~<==~
***}\typeout{~}}

\int_new:N \l_test_int

\NewTemplateType { test } {1}

\NewTemplateInterface{test} {tname2} {1} {
     key  : choice {A, B} = A,
     int  : integer = 99,
     text : tokenlist,       % no default
   }
\NewTemplateCode{test} {tname2} {1} {
     key  = {
             A = \typeout{hello}     ,
             B = \typeout{huh}
            },
     int  = \l_test_int ,
     text = \l_tmpa_tl
   }
   { \typeout{(#1 - \int_use:N \l_test_int )}}
\TIMO

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 1
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{Testing~object~types}{
  \NewTemplateType { ok } {4}                        % first decl, ok
  \NewTemplateType { ok } {3}                        % second decl, warning, ok

  \NewTemplateType { too-big } {10}                  % shows error, ok
  \NewTemplateInterface{ too-big } {tname} {10} {} % only shows first
                                                       %       error, ok

  \NewTemplateType { too-small } {-1}                  % shows error, ok
  \NewTemplateInterface{ too-small } {tname} {-1} {} % only shows first
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 2
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{Testing~object~types~ argument~ values}{

  \NewTemplateType { now-defined } 2
  \NewTemplateInterface{ now-defined} {tname} 2 {} % no error, ok

  \int_set:Nn \l_test_int {2}
  \NewTemplateInterface{ now-defined } {tname} {\l_test_int} {} % no error, ok

  \NewTemplateInterface{ now-defined } {tname}
                           {\int_use:N\l_test_int}  {}             % no error, ok

  \NewTemplateInterface{ now-defined } {tname} {1+1} {}         % no error, ok

  \NewTemplateInterface{ now-defined } {tname} 1 {} % error, ok but better
                                                       % message showing
                                                       % needed args
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 3
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TEST{Testing~key~types~ and~ names}{

  \NewTemplateInterface{ test } {tname} {1}
      { key : misspelled = 0 }                      % Error

  \NewTemplateInterface{ test } {tname} {1}
      { key 1 : boolean  ,
        key 2 : choice {a, b} ,
        key 4 : commalist ,
        key 5 : function 3 ,
        key 6 : instance {foo} ,
        key 7 : integer ,
        key 8 : length ,
        key 9 : skip ,
        key 10 : tokenlist ,


      }
  \ShowTemplateInterface { test }  { tname }               % ok

   \NewTemplateInterface{ test } {tname} {1}          % error, ok
      { key=1 : boolean  }
   \NewTemplateInterface{ test } {tname} {1}          % error, ok
      {  :     : tokenlist  }

}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 4
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{Testing~key~names}{

  \NewTemplateInterface{ test } {tname} {1}
      { key : integer,
        key : boolean                                      % double keys are
                                                           % detected
      }
  \ShowTemplateInterface  { test }  { tname }
  \ShowTemplateVariables { test }  { tname }
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 5
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{Testing~incomplete~ key~ types}{
  \NewTemplateInterface{ test } {tname} {1}
      {
        key1 : choice ,                                   % missing syntax component
        key2 : function ,                                 % detected
        key3 : instance ,
      }
  \ShowTemplateInterface { test }  { tname }
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 6
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{Testing~incorrect~key~defaults}{
   \NewTemplateInterface{ test } {tname} {1}
      {
        key  : choice {a, b} = c ,                   % wrong choice allowed
        key2 : boolean  = another dimension          % not detected  -
                                                     % we accept both
      }
   \ShowTemplateInterface { test }  { tname }
   \ShowTemplateDefaults { test }  { tname }
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 7
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{Testing~signature~interface}{
  \NewTemplateInterface{ not-defined} {tname} 0 {} % not defined error, ok

  \NewTemplateInterface{ test } {tname} {10} {} % error ok,
 }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 8
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{Same~ template~ name~ different~ types}{
  \NewTemplateType { ok } {3}                           % new as above is local
  \NewTemplateType { also-ok } {2}
  \NewTemplateInterface{ ok } {tname} 3 {}            % ok, it is allowed
  \NewTemplateInterface{ also-ok } {tname} 2 {}
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 9
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{Testing~key~defaults}{
  \NewTemplateInterface{ test } {tname} {1}
      { key 1 : boolean = false ,
        key 2 : choice {a, b} = b ,
        key 4 : commalist = {1,2},
        key 5 : function 3 = (#3#2#1),
        key 6 : instance {foo} = bar,
        key 7 : integer =99,
        key 8 : length = 1sp,
        key 9 : skip = 0 plus 1filll,
        key 10 : tokenlist = none ,
      }
  \ShowTemplateDefaults { test }  { tname }               % ok
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 10
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{Testing~code~interface}{
  \NewTemplateCode{ not-defined} {tname} {1} {}{} % not defined error, ok

  \NewTemplateInterface{ test } {tname} {1}{}

  \NewTemplateCode{test} {tname} {2} {}{} % error ok, but better msg possible
  \ShowTemplateCode{test}{tname}
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 11
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{Testing~code~interface~missing~var~assignment}{

  \NewTemplateInterface{ test } {tname} {1}
      { key 1 : tokenlist = hello,
        key 2 : tokenlist = huhu,
      }

  \NewTemplateCode{test} {tname} {1} {
        k e y 1 = \l_X_tl ,                      % missing key - detected, ok
      }{ }
  \UseTemplate{test} {tname} {key1=heh, key2=hi}{woah}
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 12
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{Testing~code~interface~var~assignments}{

  \NewTemplateInterface{ test } {tname} {1}
      { key 1 : tokenlist = hello,
        key 2 : tokenlist = huhu,
      }

  \NewTemplateCode{test} {tname} {1} {
        k e y 1 = \l_X_tl ,                       % using same var twice not detected
        k ey 2  = \l_X_tl ,
      }{ }
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 13
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{Testing~code~interface:~missing~var~declarations}{

  \NewTemplateInterface{ test } {tname3} {1}
      { key 1 : tokenlist = hello,
        key 2 : tokenlist = huhu,
      }

  \NewTemplateCode{test} {tname3} {1} {            % this is currently missing
        k e y 1 = \l_X_tl ,                            % error for undeclared vars
        k ey 2  = \l_Y_tl ,
      }{ }

  \ShowTemplateCode      {test} {tname3}
  \ShowTemplateVariables {test} {tname3}
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 14
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\OMIT
\tl_new:N  \l_X_tl
\tl_new:N  \l_Y_tl
\int_new:N \l_X_int
\TIMO


\TEST{Testing~code~interface:~missing~var~declarations}{

  \NewTemplateInterface{ test } {tname3} {1}
      { key 1 : tokenlist = hello,
        key 2 : tokenlist = huhu,
        key 3 : integer   = 99,
      }

  \NewTemplateCode{test} {tname3} {1} {
        ke y 1 = \l_X_tl ,
        k ey 2 = glabol \l_Y_tl ,       % error, ok - but should this be
                                        %        stored incorrectly?
        k e y3 = global \l_X_int ,
      }{ }
  \ShowTemplateCode      {test} {tname3}
  \ShowTemplateVariables {test} {tname3}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 15
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{Testing~code~interface:~choices}{
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 16
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{Testing~interfaces~in~document~preamble}{

  \ExplSyntaxOff
  \NewTemplateType {test} {1}

  \NewTemplateInterface{test} {tname3} {1} {
        key : choice {A, B} = A,
      }

  \NewTemplateCode{test} {tname3} {1} {
        key = {
          A = \typeout{hello}     ,
          B = \typeout{huh}
        }
      }
      { }

  \ShowTemplateCode      {test} {tname3}
  \ShowTemplateVariables {test} {tname3}
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 17
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{Testing~instances:~existance~check}{

   \IfInstanceExistTF {test} {nono}                      % instance unknwon, ok
        {\typeout{Yes}} {\typeout{No}}

   \IfInstanceExistTF {missingobjecttype} {nono}         % objecttype unknown, ok
        {\typeout{Yes}} {\typeout{No}}

   \group_begin:

     \NewInstance {test} {myinstance} {tname2} {}

     \IfInstanceExistTF {test} {myinstance}              % test inside group, ok
	  {\typeout{Yes}} {\typeout{No}}

   \group_end:

     \IfInstanceExistTF {test} {myinstance}              % test outside group
	  {\typeout{Yes}} {\typeout{No}}                 % no longer defined, ok

}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 18
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{Testing~instances:~declare~instance}{

   \NewInstance {test} {myinstance} {never-defined} {}  % error ok

     \NewInstance {test} {myinstance}  {tname2} {}
     \NewInstance {test} {myinstance2} {tname2} {key=B}

     \UseInstance {test}{myinstance}  {X}
     \UseInstance {test}{myinstance2} {Y}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 19
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{Edit~template~defaults}{

  \NewTemplateInterface{test} {tname3} {1} {
	key : choice {A, B} = A,
      }

  \NewTemplateCode{test} {tname3} {1} {
	key = {
	  A = \typeout{hello}     ,
	  B = \typeout{huh}
	}
      }
      { \typeout{(#1)}}

  \ShowTemplateDefaults {test} {tname3}

  \NewInstance {test} {myinstance}  {tname3} {}

  \EditTemplateDefaults {test} {tname3} {key = B }
  \ShowTemplateDefaults {test} {tname3}

  \NewInstance {test} {myinstance2} {tname3} {}

  \EditTemplateDefaults {test} {tname3} {key = C }
  \ShowTemplateDefaults {test} {tname3}

  \NewTemplateCode{test} {tname3} {1} {
	key = {
	       A = \typeout{hello}     ,
	       B = \typeout{huh}       ,
	 unknown = \typeout{hi}
	}
      }
      { \typeout{(#1)}}

  \ShowTemplateDefaults {test} {tname3}
  \EditTemplateDefaults {test} {tname3} {key = C }
  \ShowTemplateDefaults {test} {tname3}

  \NewInstance {test} {myinstance3} {tname3} {}

  \EditTemplateDefaults {test} {tname3} { }
  \ShowTemplateDefaults {test} {tname3}

  \NewInstance {test} {myinstance4} {tname3} {}

    \UseInstance {test}{myinstance}  {A}
    \UseInstance {test}{myinstance2} {B}
    \UseInstance {test}{myinstance3} {C}
    \UseInstance {test}{myinstance4} {D}

    \UseTemplate {test}{tname3}{key=C} {direct}


  \EditTemplateDefaults {test} {tname3} {wrong = C }
}



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 20
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{Edit~instance~values}{

  \NewInstance {test} {myinstance} {tname2} {}

  \ShowInstanceValues {test} {myinstance}

  \EditInstance {test} {myinstance} {int = 0 , key = B}

  \ShowInstanceValues {test} {myinstance}

  \UseInstance {test}{myinstance} {A}

  \EditInstance {test} {myinstance} {int = 1, text = hi}

  \UseInstance {test}{myinstance} {A}

  \EditInstance {test} {myinstance} {}

  \UseInstance {test}{myinstance} {A}

  \EditInstance {test} {myinstance} {key = 1}

  \EditInstance {notdefined} {myinstance} {key = 1}

  \EditInstance {test} {myinstance} {key = 1}

  \EditInstance {test} {myinstance} {key = A}

  \UseInstance {test}{myinstance} {A}

  \EditInstance {test} {myinstance} {key 2 = wrong}

  \ShowInstanceValues {test} {myinstance}

  \UseInstance {test}{myinstance} {A}
\ERROR instance editing should not depend on template and should not replace
       template code
}
\END
